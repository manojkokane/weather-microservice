<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <modules>
        <module>startup</module>
		<module>api</module>
		<module>controllers</module>
		<module>services</module>
		<module>repositories</module>
		<module>connectors</module>
		<module>common</module>
		<module>docker</module>
	</modules>
    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.terena.interview.solution.weather</groupId>
	<artifactId>weather-microservice</artifactId>
	<version>1.0.0</version>
	<name>weather-microservice</name>
	<description>This is an implementation for Tenera backend code challenge</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>2020.0.3-SNAPSHOT</spring-cloud.version>
		<io.swagger.annotations.version>1.5.21</io.swagger.annotations.version>
		<io.swagger.models.version>1.6.0</io.swagger.models.version>
		<fasterxml.jackson.annotations.version>2.10.3</fasterxml.jackson.annotations.version>
		<io.swagger.codegen.plugin>3.0.18</io.swagger.codegen.plugin>
		<neflix.feign.jackson.version>8.16.2</neflix.feign.jackson.version>
		<spotify.docker.pugin.version>1.4.13</spotify.docker.pugin.version>
		<docker.repo.user>testuser</docker.repo.user>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.netflix.feign</groupId>
			<artifactId>feign-jackson</artifactId>
			<version>${neflix.feign.jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>connectors</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>services</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>controllers</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>repositories</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.terena.interview.solution.weather</groupId>
				<artifactId>startup</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
